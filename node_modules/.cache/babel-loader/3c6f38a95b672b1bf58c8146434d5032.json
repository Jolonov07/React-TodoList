{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React lesson\\\\todo_app\\\\src\\\\pages\\\\Main\\\\pages\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Navbar from \"../../../components/Header\";\nimport cls from './Main.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport axios from \"axios\";\nimport { request } from \"../../../configs\";\nimport { Form } from '../../../helpers/Form';\nimport { useForm } from \"react-hook-form\";\nimport NoAuth from '../../../components/NoAuth';\nimport { Main } from '..';\nimport TextArea from '../../../components/TextArea';\nimport Button from '../../../components/Button';\nimport Loading from '../../../components/Loading';\nimport TodoItem from '../../../components/ToDoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    formState,\n    register,\n    reset\n  } = useForm();\n  const {\n    todos,\n    actions: {\n      postNewTodo,\n      deleteTodo\n    }\n  } = Main.Hooks.use();\n  const [isActive, setIsActive] = React.useState(false);\n\n  const onSubmit = data => {\n    postNewTodo(data);\n  };\n\n  if (!localStorage.getItem('localId')) return /*#__PURE__*/_jsxDEV(NoAuth, {\n    link: '/signin',\n    textContent: 'Вы не авторизовались!',\n    textLink: 'Войти!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  if (!todos) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cls.root,\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      showLink: true,\n      showburger: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this) // <div className={cls.root}>\n  //   <Header showLink={true} showburger={true} />\n  //   <form className={cls.content} onSubmit={handleSubmit(onSubmit)}>\n  //     <TextArea \n  //         placeholder={'New ToDo'} \n  //         {...register('title', Form.Options.todoTitle)}\n  //         error={formState.errors.title}\n  //         />\n  //     <Button \n  //       type={'submit'} \n  //       text={'Add'}\n  //       disabled={isActive}\n  //       />\n  //   </form>\n  //   <div className={cls.container}>\n  //     {\n  //       data.map(({ id, title, completed }, i) => (\n  //         <ToDoitem\n  //         key={i}\n  //         title={title}\n  //         completed={completed}\n  //         deleteItem={deleteItem}\n  //         putchItem={putchItem}\n  //         id={id}\n  //         />\n  //       ))\n  //     }\n  //   </div>\n  // </div>\n  ;\n};\n\n_s(MainPage, \"06/J++UZbqm/ZczTBNFdgqub+48=\", false, function () {\n  return [useForm];\n});\n\n_c = MainPage;\nconsole.log(Loading);\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","Navbar","cls","NavLink","axios","request","Form","useForm","NoAuth","Main","TextArea","Button","Loading","TodoItem","MainPage","handleSubmit","formState","register","reset","todos","actions","postNewTodo","deleteTodo","Hooks","use","isActive","setIsActive","useState","onSubmit","data","localStorage","getItem","root","console","log"],"sources":["C:/Users/user/Desktop/React lesson/todo_app/src/pages/Main/pages/index.jsx"],"sourcesContent":["import React from \"react\"\r\nimport Navbar from \"../../../components/Header\"\r\nimport cls from './Main.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { request } from \"../../../configs\"\r\nimport { Form } from '../../../helpers/Form'\r\nimport { useForm } from \"react-hook-form\"\r\nimport NoAuth from '../../../components/NoAuth'\r\nimport { Main } from '..'\r\nimport TextArea from '../../../components/TextArea'\r\nimport Button from '../../../components/Button'\r\nimport Loading from '../../../components/Loading'\r\nimport TodoItem from '../../../components/ToDoItem'\r\n\r\nconst MainPage = () => {\r\n  const {\r\n    handleSubmit,\r\n    formState,\r\n    register,\r\n    reset,\r\n  } = useForm()\r\n\r\n  const { \r\n    todos, \r\n    actions: { \r\n      postNewTodo,\r\n      deleteTodo,\r\n    }\r\n  } = Main.Hooks.use()\r\n\r\n  const [isActive, setIsActive] = React.useState(false)\r\n\r\n  const onSubmit = (data) => {\r\n    postNewTodo(data)\r\n  }\r\n\r\n  if (!localStorage.getItem('localId')) return (\r\n    <NoAuth \r\n      link={'/signin'} \r\n      textContent={'Вы не авторизовались!'}\r\n      textLink={'Войти!'}\r\n    />\r\n  )\r\n    if (!todos) return (<Loading />)\r\n    return (\r\n      <div className={cls.root}>\r\n      <Navbar showLink={true} showburger={true} />\r\n      \r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n      // <div className={cls.root}>\r\n      //   <Header showLink={true} showburger={true} />\r\n      //   <form className={cls.content} onSubmit={handleSubmit(onSubmit)}>\r\n      //     <TextArea \r\n      //         placeholder={'New ToDo'} \r\n      //         {...register('title', Form.Options.todoTitle)}\r\n      //         error={formState.errors.title}\r\n      //         />\r\n      //     <Button \r\n      //       type={'submit'} \r\n      //       text={'Add'}\r\n      //       disabled={isActive}\r\n      //       />\r\n      //   </form>\r\n      //   <div className={cls.container}>\r\n      //     {\r\n      //       data.map(({ id, title, completed }, i) => (\r\n      //         <ToDoitem\r\n      //         key={i}\r\n      //         title={title}\r\n      //         completed={completed}\r\n      //         deleteItem={deleteItem}\r\n      //         putchItem={putchItem}\r\n      //         id={id}\r\n      //         />\r\n      //       ))\r\n      //     }\r\n      //   </div>\r\n      // </div>\r\n    )\r\n}\r\nconsole.log(Loading)\r\n\r\nexport default MainPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM;IACJC,YADI;IAEJC,SAFI;IAGJC,QAHI;IAIJC;EAJI,IAKFX,OAAO,EALX;EAOA,MAAM;IACJY,KADI;IAEJC,OAAO,EAAE;MACPC,WADO;MAEPC;IAFO;EAFL,IAMFb,IAAI,CAACc,KAAL,CAAWC,GAAX,EANJ;EAQA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B1B,KAAK,CAAC2B,QAAN,CAAe,KAAf,CAAhC;;EAEA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;IACzBR,WAAW,CAACQ,IAAD,CAAX;EACD,CAFD;;EAIA,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAL,EAAsC,oBACpC,QAAC,MAAD;IACE,IAAI,EAAE,SADR;IAEE,WAAW,EAAE,uBAFf;IAGE,QAAQ,EAAE;EAHZ;IAAA;IAAA;IAAA;EAAA,QADoC;EAOpC,IAAI,CAACZ,KAAL,EAAY,oBAAQ,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAR;EACZ,oBACE;IAAK,SAAS,EAAEjB,GAAG,CAAC8B,IAApB;IAAA,uBACA,QAAC,MAAD;MAAQ,QAAQ,EAAE,IAAlB;MAAwB,UAAU,EAAE;IAApC;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF,CAUE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAtCF;AAwCH,CAtED;;GAAMlB,Q;UAMAP,O;;;KANAO,Q;AAuENmB,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AAEA,eAAeE,QAAf"},"metadata":{},"sourceType":"module"}